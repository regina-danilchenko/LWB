from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

from data import db_session
from data.user import User

from utils.common import print_text


# –°–æ–∑–¥–∞—ë–º —Ä–æ—É—Ç–µ—Ä
open_dict_router = Router()


# –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Å–ª–æ–≤
@open_dict_router.message(Command('open_dict'))
@open_dict_router.callback_query(lambda c: c.data == "open_dict")
async def process_add(request: Message | CallbackQuery):
    db_sess = db_session.create_session()
    user_id = request.from_user.id
    words = [user.words for user in db_sess.query(User).filter(User.tg_id == user_id).all()][0]
    if words:
        language = db_sess.query(User).filter(User.tg_id == user_id).first().language_preference
        text = "üìö –í–∞—à —Å–ª–æ–≤–∞—Ä—å:\n\n"
        for word in words:
            text += (f'üîπ {word.original_word.capitalize()}({language}) ‚Üí {word.translation.capitalize()}\n'
                     f'–î–æ–±–∞–≤–ª–µ–Ω–æ: {word.added_date.strftime("%d.%m.%Y")}\n'
                     f'–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ: {word.last_reviewed.strftime("%d.%m.%Y")}\n\n')
        await print_text(request, text)
    else:
        text = "üìö –í–∞—à —Å–ª–æ–≤–∞—Ä—å –ø—É—Å—Ç! –î–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é /add"
        await print_text(request, text)
